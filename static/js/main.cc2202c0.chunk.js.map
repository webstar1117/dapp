{"version":3,"sources":["services/socketClient.js","services/api.js","components/TradingViewChart/index.js","pages/Home/index.js","index.js"],"names":["SocketClient","base_url","path","this","baseUrl","tvIntervals","streams","_createSocket","_ws","WebSocket","onopen","e","console","info","localStorage","setItem","onclose","warn","onerror","err","onmessage","msg","data","sData","JSON","parse","k","s","E","o","h","l","v","c","T","t","lastSocketData","time","close","parseFloat","open","high","low","volume","closeTime","openTime","Object","keys","length","listener","error","symbolInfo","resolution","onRealtimeCallback","subscribeUID","onResetCacheNeededCallback","lastDailyBar","paramStr","name","toLowerCase","obj","method","params","id","readyState","send","stringify","subscriberUID","split","binanceAPI","options","binanceHost","debug","ws","binanceWS","fetch","then","res","json","symbols","symbol","interval","startTime","endTime","limit","url","callback","binanceSymbols","supports_marks","supports_timescale_marks","supports_time","supported_resolutions","catch","userInput","exchange","symbolType","onResultReadyCallback","toUpperCase","filter","indexOf","map","full_name","description","baseAsset","quoteAsset","ticker","type","symbolName","onSymbolResolvedCallback","onResolveErrorCallback","log","comps","pricescale","filters","filterType","Math","round","tickSize","setTimeout","listed_exchange","session","minmov","has_intraday","has_daily","has_weekly_and_monthly","currency_code","from","to","onHistoryCallback","onErrorCallback","firstDataRequest","totalKlines","finishKlines","noData","historyCBArray","kline","getKlines","a","binanceKlines","concat","subscribeOnStream","unsubscribeFromStream","TradingViewChart","chartProperties","chartReady","tradingViewWidget","onChartReady","chartObject","activeChart","state","isChartReady","bfAPI","widgetOptions","container_id","datafeed","library_path","disabled_features","window","tvWidget","TradingView","widget","Component","Home","cOptions","locale","navigator","language","fullscreen","theme","allow_symbol_change","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","autosize","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc2202c0.chunk.js","sourcesContent":["export default class SocketClient {\n  constructor(base_url, path) {\n    this.baseUrl = 'wss://stream.binance.com:9443/ws'\n    this.tvIntervals = {\n      '1': '1m',\n      '3': '3m',\n      '5': '5m',\n      '15': '15m',\n      '30': '30m',\n      '60': '1h',\n      '120': '2h',\n      '240': '4h',\n      '360': '6h',\n      '480': '8h',\n      '720': '12h',\n      'D': '1d',\n      '1D': '1d',\n      '3D': '3d',\n      'W': '1w',\n      '1W': '1w',\n      'M': '1M',\n      '1M': '1M',\n    };\n    this.streams = {}; // e.g: {'BTCUSDT': { paramStr: '', data:{}, listener:  } }\n    this._createSocket();\n  }\n\n  _createSocket() {\n    this._ws = new WebSocket(this.baseUrl)\n    this._ws.onopen = (e) => {\n      console.info(`Binance WS Open`)\n      localStorage.setItem(\"wsStatus\", 1)\n    }\n\n    this._ws.onclose = () => {\n      console.warn('Binance WS Closed')\n      localStorage.setItem(\"wsStatus\", 0)\n    }\n\n    this._ws.onerror = (err) => {\n      console.warn('WS Error', err)\n      localStorage.setItem(\"wsStatus\", 0)\n    }\n\n    this._ws.onmessage = (msg) => {\n      if (!msg?.data) return\n      let sData = JSON.parse(msg.data)\n      try {\n        if (sData && sData.k) {\n          let { s, E } = sData\n          let { o, h, l, v, c, T, t } = sData.k\n          // Update data\n          let lastSocketData = {\n            time: t,\n            close: parseFloat(c),\n            open: parseFloat(o),\n            high: parseFloat(h),\n            low: parseFloat(l),\n            volume: parseFloat(v),\n            closeTime: T,\n            openTime: t,\n          }\n          if (Object.keys(this.streams).length) {\n            this.streams[s].data = lastSocketData\n            this.streams[s].listener(lastSocketData)\n          }\n        }\n      }\n      catch (e) {\n        console.error(e)\n      }\n\n    }\n  }\n\n  subscribeOnStream(symbolInfo, resolution, onRealtimeCallback, subscribeUID, onResetCacheNeededCallback, lastDailyBar) {\n    try {\n      let paramStr = `${symbolInfo.name.toLowerCase()}@kline_${this.tvIntervals[resolution]}`\n      const obj = {\n        method: \"SUBSCRIBE\",\n        params: [\n          paramStr\n        ],\n        id: 1\n      }\n      if (this._ws.readyState === 1) {\n        this._ws.send(JSON.stringify(obj))\n        this.streams[symbolInfo.name] = {  //register multiple streams in streams object\n          paramStr,\n          listener: onRealtimeCallback\n        }\n      }\n    }\n    catch (e) {\n      console.error(e)\n    }\n  }\n\n  unsubscribeFromStream(subscriberUID) {\n    try {\n      let id = subscriberUID.split(\"_\")[0]\n      const obj = {\n        method: \"UNSUBSCRIBE\",\n        params: [\n          this.streams[id].paramStr\n        ],\n        id: 1\n      }\n      delete this.streams[id]\n      if (this._ws.readyState === 1) {\n        this._ws.send(JSON.stringify(obj))\n      }\n    }\n    catch (e) {\n      console.error(e)\n    }\n  }\n}\n","import binanceWS from './socketClient'\nexport default class binanceAPI {\n  constructor(options) {\n    this.binanceHost = 'https://api.binance.com'\n    this.debug = options.debug || false\n    this.ws = new binanceWS()\n  }\n\n  binanceSymbols() {\n    return fetch(this.binanceHost + '/api/v1/exchangeInfo').then(res => {\n      return res.json()\n    }).then(json => {\n      return json.symbols\n    })\n  }\n\n  binanceKlines(symbol, interval, startTime, endTime, limit) {\n    const url = `${this.binanceHost}/api/v1/klines?symbol=${symbol}&interval=${interval}${startTime ? `&startTime=${startTime}` : ''}${endTime ? `&endTime=${endTime}` : ''}${limit ? `&limit=${limit}` : ''}`\n\n    return fetch(url).then(res => {\n      return res.json()\n    }).then(json => {\n      return json\n    })\n  }\n\n  // chart specific functions below, impt that their function names stay same\n  onReady(callback) {\n    this.binanceSymbols().then((symbols) => {\n      this.symbols = symbols\n      callback({\n        supports_marks: false,\n        supports_timescale_marks: false,\n        supports_time: true,\n        supported_resolutions: [\n          '1', '3', '5', '15', '30', '60', '120', '240', '360', '480', '720', '1D', '3D', '1W', '1M'\n        ]\n      })\n    }).catch(err => {\n      console.error(err)\n    })\n  }\n\n  searchSymbols(userInput, exchange, symbolType, onResultReadyCallback) {\n    userInput = userInput.toUpperCase()\n    onResultReadyCallback(\n      this.symbols.filter((symbol) => {\n        return symbol.symbol.indexOf(userInput) >= 0\n      }).map((symbol) => {\n        return {\n          symbol: symbol.symbol,\n          full_name: symbol.symbol,\n          description: symbol.baseAsset + ' / ' + symbol.quoteAsset,\n          ticker: symbol.symbol,\n          exchange: 'Binance',\n          type: 'crypto'\n        }\n      })\n    )\n  }\n\n  resolveSymbol(symbolName, onSymbolResolvedCallback, onResolveErrorCallback) {\n    this.debug && console.log('👉 resolveSymbol:', symbolName)\n\n    const comps = symbolName.split(':')\n    symbolName = (comps.length > 1 ? comps[1] : symbolName).toUpperCase()\n\n    function pricescale(symbol) {\n      for (let filter of symbol.filters) {\n        if (filter.filterType == 'PRICE_FILTER') {\n          return Math.round(1 / parseFloat(filter.tickSize))\n        }\n      }\n      return 1\n    }\n\n    for (let symbol of this.symbols) {\n      if (symbol.symbol == symbolName) {\n        setTimeout(() => {\n          onSymbolResolvedCallback({\n            name: symbol.symbol,\n            description: symbol.baseAsset + ' / ' + symbol.quoteAsset,\n            ticker: symbol.symbol,\n            exchange: 'Binance',\n            listed_exchange: 'Binance',\n            type: 'crypto',\n            session: '24x7',\n            minmov: 1,\n            pricescale: pricescale(symbol),\n            // timezone: 'UTC',\n            has_intraday: true,\n            has_daily: true,\n            has_weekly_and_monthly: true,\n            currency_code: symbol.quoteAsset\n          })\n        }, 0)\n        return\n      }\n    }\n    // minmov/pricescale will give the value of decimal places that will be shown on y-axis of the chart\n    //\n    onResolveErrorCallback('not found')\n  }\n\n  getBars(symbolInfo, resolution, from, to, onHistoryCallback, onErrorCallback, firstDataRequest) {\n    const interval = this.ws.tvIntervals[resolution]\n    if (!interval) {\n      onErrorCallback('Invalid interval')\n    }\n\n    let totalKlines = []\n    const kLinesLimit = 500\n    const finishKlines = () => {\n      if (totalKlines.length === 0) {\n        onHistoryCallback([], { noData: true })\n      } else {\n        let historyCBArray = totalKlines.map(kline => ({\n          time: kline[0],\n          open: parseFloat(kline[1]),\n          high: parseFloat(kline[2]),\n          low: parseFloat(kline[3]),\n          close: parseFloat(kline[4]),\n          volume: parseFloat(kline[5])\n        }))\n        onHistoryCallback(historyCBArray, { noData: false })\n      }\n    }\n\n    const getKlines = async (from, to) => {\n      try {\n        const data = await this.binanceKlines(symbolInfo.name, interval, from, to, kLinesLimit)\n        totalKlines = totalKlines.concat(data)\n        if (data.length === kLinesLimit) {\n          from = data[data.length - 1][0] + 1\n          getKlines(from, to)\n        } else {\n          finishKlines()\n        }\n      }\n      catch (e) {\n        console.error(e)\n        onErrorCallback(`Error in 'getKlines' func`)\n      }\n    }\n\n    from *= 1000\n    to *= 1000\n    getKlines(from, to)\n  }\n\n  subscribeBars(symbolInfo, resolution, onRealtimeCallback, subscriberUID, onResetCacheNeededCallback) {\n    this.ws.subscribeOnStream(symbolInfo, resolution, onRealtimeCallback, subscriberUID, onResetCacheNeededCallback)\n  }\n\n  unsubscribeBars(subscriberUID) {\n    this.ws.unsubscribeFromStream(subscriberUID)\n  }\n}\n","import React, { Component } from \"react\";\nimport binanceAPI from \"../../services/api\";\nimport \"./index.scss\";\nexport default class TradingViewChart extends Component {\n  constructor({ chartProperties }) {\n    super();\n    this.state = {\n      isChartReady: false,\n    };\n    this.bfAPI = new binanceAPI({ debug: false });\n    this.widgetOptions = {\n      container_id: \"chart_container\",\n      datafeed: this.bfAPI,\n      library_path: \"/scripts/charting_library/\",\n      disabled_features: [\"timeframes_toolbar\", \"header_undo_redo\"],\n      ...chartProperties\n    };\n    this.tradingViewWidget = null;\n    this.chartObject = null;\n  }\n\n  chartReady = () => {\n    if (!this.tradingViewWidget) return\n    this.tradingViewWidget.onChartReady(() => {\n      this.chartObject = this.tradingViewWidget.activeChart();\n    });\n  };\n\n  componentDidMount() {\n    this.tradingViewWidget = window.tvWidget = new window.TradingView.widget(\n      this.widgetOptions\n    );\n    this.chartReady();\n  }\n\n  componentDidUpdate() {\n    if (!this.tradingViewWidget) return\n  }\n\n  render() {\n    return <div id=\"chart_container\"></div>\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport TradingViewChart from \"../../components/TradingViewChart\";\n\nfunction getLocalLanguage() {\n  return navigator.language.split('-')[0] || 'en'\n}\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.cOptions = {\n      locale: getLocalLanguage(),\n      debug: false,\n      fullscreen: false,\n      symbol: 'BNBUSDT',\n      interval: '60',\n      theme: 'dark',\n      allow_symbol_change: true,\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      autosize: true,\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"trading-chart\">\n          <TradingViewChart chartProperties={this.cOptions} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/Home';\nimport './assets/scss/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}